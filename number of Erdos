#include<bits/stdc++.h>
using namespace std;
const int maxn=1010;
vector<int>adj[maxn];
bool visit[maxn];
int dist[maxn];

void bfs(int x){
    queue<int>Q;
    Q.push(x);
    dist[x]=0;
    visit[x]=1;
    while(not Q.empty()){
        int q=Q.front();
        Q.pop();
        for(int v:adj[q]){
            if(!visit[v]){
                visit[v]=1;
                dist[v]=dist[q]+1;//number of erdos
                Q.push(v);
            }
        }
    }
}
int main(){
 int n,m;
 cin>>n>>m;
 for(int i=1;i<=m;i++){
     int a,b;
     cin>>a>>b;
     adj[a].push_back(b);
     adj[b].push_back(a);
 }
 
    memset(dist,0,sizeof(dist));
    bfs(1);//Erdos
    for(int i=1;i<=n;i++){
        cout<<dist[i]<<" ";
    }
}
