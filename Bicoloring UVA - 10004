#include<bits/stdc++.h>
#define pb push_back
using namespace std;
int vis[10000+5];
int color[10000+5];

vector<int>adj[10000+5];
int bfs(int node){
    vis[node]=1;
    color[node]=0;
    queue<int>Q;
    Q.push(node);
    while(not Q.empty()){
        int x=Q.front();
        Q.pop();
        for(auto i:adj[x]){
            int y=i;
            if(not vis[y]){
                vis[y]=1;
                if(color[x]==0)
                    color[y]=1;
                else if(color[x]==1)
                    color[y]=0;
                Q.push(y);    
            }
            else {
                if(color[x]==color[y])
                    return 0;
            }
        }
    }
    return 1;
    
}
int main(){
	int n,m;
	while(cin>>n){
	    if(n==0)break;
	    cin>>m;
	    int u;
	    for(int i=0;i<m;i++){
	    	int a,b;
	    	cin>>a>>b;
	    	u=a;
	    	adj[a].pb(b);
	    	adj[b].pb(a);
	    }
	
    memset(vis,0,sizeof(vis));
    memset(color,-1,sizeof(color));
	int x=bfs(u);
    if(x)
         cout<<"BICOLORABLE."<<endl;
    else 
          cout<<"NOT BICOLORABLE."<<endl;
       for(int i=0; i<=n; i++)
        {
            adj[i].clear();
        }
    
    
    }
    return 0;
}
