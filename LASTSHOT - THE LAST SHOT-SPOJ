#include<bits/stdc++.h>
using namespace std;
#define pb push_back

const int N=100000+5;
#define FAST ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
const int dx[] = { -1 , +0 , +1 , +0 , +1 , +1 , -1 , -1 };
const int dy[] = { +0 , -1 , +0 , +1 , +1 , -1 , +1 , -1 };
int n,t,m;
bool visit[N];
vector<int>adj[N]; 

int bfs(int node){
    int cont=0;
    queue<int>Q;
    Q.push(node);
    visit[node]=true;
    while(not Q.empty()){
        cont++;
        int r=Q.front();
        Q.pop();
        for(int v:adj[r]){
            if(not visit[v]){
                visit[v]=1;
                Q.push(v);
            }
        }
    }
    return cont;
}

int main(){
	FAST;
        cin>>n>>m;
        for(int i=0;i<m;i++){
            int a,b;
            cin>>a>>b;
            adj[a].pb(b);
        }
        
        int ans=0;
        for(int i=1;i<=n;i++){
			//because it is a directed graph
        	memset(visit,false,sizeof(visit));     
            ans=max(ans,bfs(i));    
        }
        cout<<ans<<'\n';
    
    return 0;
}
